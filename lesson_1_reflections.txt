How did viewing a diff between two versions of a file help you see the bug that was introduced?
When you see the lines that have differences you can focus your attention on those lines and find the error.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
When you see that the output of your project has changed in an unexpected way you can easyly look for older versions and restore the output to the one you desire.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: each commint is meaningful to you, so it's easy to browse between all the commits
Cons: it's possible to make a human error and not to do a commit that would hava saved working time.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because Git is software oriented, and software developing involves multiple files, so it is a good idea to commit all the files involved on a project.

How can you use the commands git log and git diff to view the history of files?
You use git log to find the commit with the change you are looking for, and then git diff to see the specific changes of that commit compared to the previus one.

How might using version control make you more confident to make changes that could break something?
with version control it's easy to go back to a previous version of your project to correct bugs, this gives you confidence to make changes knowing you can always go back to a version without the bug.

Now that you have your workspace set up, what do you want to try using Git for?
I want to try using git for my web developing projects

